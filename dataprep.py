{"cells":[{"cell_type":"code","source":["from azureml.core import Run\r\n","\r\n","import pandas as pd \r\n","import numpy as np \r\n","import pyarrow as pa\r\n","import pyarrow.parquet as pq\r\n","import argparse\r\n","\r\n","RANDOM_SEED=42\r\n","\r\n","def prepare_age(df):\r\n","    # Fill in missing Age values from distribution of present Age values \r\n","    mean = df[\"Age\"].mean()\r\n","    std = df[\"Age\"].std()\r\n","    is_null = df[\"Age\"].isnull().sum()\r\n","    # compute enough (== is_null().sum()) random numbers between the mean, std\r\n","    rand_age = np.random.randint(mean - std, mean + std, size = is_null)\r\n","    # fill NaN values in Age column with random values generated\r\n","    age_slice = df[\"Age\"].copy()\r\n","    age_slice[np.isnan(age_slice)] = rand_age\r\n","    df[\"Age\"] = age_slice\r\n","    df[\"Age\"] = df[\"Age\"].astype(int)\r\n","    \r\n","    # Quantize age into 5 classes\r\n","    df['Age_Group'] = pd.qcut(df['Age'],5, labels=False)\r\n","    df.drop(['Age'], axis=1, inplace=True)\r\n","    return df\r\n","\r\n","def prepare_fare(df):\r\n","    df['Fare'].fillna(0, inplace=True)\r\n","    df['Fare_Group'] = pd.qcut(df['Fare'],5,labels=False)\r\n","    df.drop(['Fare'], axis=1, inplace=True)\r\n","    return df \r\n","\r\n","def prepare_genders(df):\r\n","    genders = {\"male\": 0, \"female\": 1, \"unknown\": 2}\r\n","    df['Sex'] = df['Sex'].map(genders)\r\n","    df['Sex'].fillna(2, inplace=True)\r\n","    df['Sex'] = df['Sex'].astype(int)\r\n","    return df\r\n","\r\n","def prepare_embarked(df):\r\n","    df['Embarked'].replace('', 'U', inplace=True)\r\n","    df['Embarked'].fillna('U', inplace=True)\r\n","    ports = {\"S\": 0, \"C\": 1, \"Q\": 2, \"U\": 3}\r\n","    df['Embarked'] = df['Embarked'].map(ports)\r\n","    return df\r\n","    \r\n","parser = argparse.ArgumentParser()\r\n","parser.add_argument('--output_path', dest='output_path', required=True)\r\n","args = parser.parse_args()\r\n","    \r\n","titanic_ds = Run.get_context().input_datasets['titanic_ds']\r\n","df = titanic_ds.to_pandas_dataframe().drop(['PassengerId', 'Name', 'Ticket', 'Cabin'], axis=1)\r\n","df = prepare_embarked(prepare_genders(prepare_fare(prepare_age(df))))\r\n","\r\n","os.makedirs(os.path.dirname(args.output_path), exist_ok=True)\r\n","pq.write_table(pa.Table.from_pandas(df), args.output_path)\r\n","\r\n","print(f\"Wrote test to {args.output_path} and train to {args.output_path}\")"],"outputs":[],"execution_count":null,"metadata":{}}],"metadata":{"kernelspec":{"name":"python3-azureml","language":"python","display_name":"Python 3.6 - AzureML"},"language_info":{"name":"python","version":"3.6.9","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kernel_info":{"name":"python3-azureml"},"nteract":{"version":"nteract-front-end@1.0.0"}},"nbformat":4,"nbformat_minor":2}